Итого, итератор в python — это любой объект, реализующий метод __next__ без аргументов, который должен 
вернуть следующий элемент или ошибку StopIteration. Также он реализует метод __iter__ и поэтому 
сам является итерируемым объектом. ... Первый аргумент должен быть вызываемым объектом, а второй — неким ограничителем.

В Python итерируемый объект (iterable или iterable object), итератор (iterator или iterator object) и генератор
 (generator или generator object) - разные понятия, а не синонимы одного и того же. От итерируемого объекта 
можно получить его "копию"-итератор; генератор является разновидностью итератора.

В некоторых источниках итератор рассматривается как частный случай итерируемого объекта, поскольку оба поддерживают
 операцию итерации, то есть обход циклом for. Однако for работает только с итераторами. Переданный на обработку 
объект должен иметь метод __iter__(), который for неявно вызывает перед обходом.
 Метод __iter__() должен возвращать итератор.

У итерируемого объекта, то есть объекта, который можно "превратить" в итератор, должен быть метод __iter__(), 
который возвращает соответствующий объект-итератор.